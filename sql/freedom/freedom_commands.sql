-- Reset table
DELETE FROM freedom.commands;

SET @GMLEVEL_PLAYER := 0;
SET @GMLEVEL_MODERATOR := 1;
SET @GMLEVEL_GM := 2;
SET @GMLEVEL_ADMIN := 3;

-- DEFAULT COMMANDS
INSERT INTO freedom.commands (`command`, `syntax`, `description`, `gmlevel`) VALUES
('account', 'Syntax: .account', 'Display the access level of your account and the email adress if you possess the necessary permissions.', @GMLEVEL_ADMIN),
('account addon', 'Syntax: .account addon $addon', 'Set expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk, 3 - cata.', @GMLEVEL_ADMIN),
('account create', 'Syntax: .account create $account $password', 'Create account and set password to it.', @GMLEVEL_ADMIN),
('account delete', 'Syntax: .account delete $account', 'Delete account with all characters.', @GMLEVEL_ADMIN),
('account email', 'Syntax: .account email $oldemail $currentpassword $newemail $newemailconfirmation', 'Change your account email. You may need to check the actual security mode to see if email input is necessary for password change', @GMLEVEL_ADMIN),
('account lock country', 'Syntax: .account lock country [on|off]', 'Allow login from account only from current used Country or remove this requirement.', @GMLEVEL_ADMIN),
('account lock ip', 'Syntax: .account lock ip [on|off]', 'Allow login from account only from current used IP or remove this requirement.', @GMLEVEL_ADMIN),
('account onlinelist', 'Syntax: .account onlinelist', 'Show list of online accounts.', @GMLEVEL_ADMIN),
('account password', 'Syntax: .account password $old_password $new_password $new_password [$email]', 'Change your account password. You may need to check the actual security mode to see if email input is necessary.', @GMLEVEL_ADMIN),
('account set', 'Syntax: .account set $subcommand', 'Type .account set to see the list of possible subcommands or .help account set $subcommand to see info on subcommands', @GMLEVEL_ADMIN),
('account set addon', 'Syntax: .account set addon [$account] $addon', 'Set user (possible targeted) expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk, 3 - cata.', @GMLEVEL_ADMIN),
('account set gmlevel', 'Syntax: .account set gmlevel [$account] $level [$realmid]', 'Set the security level for targeted player (can\'t be used at self) or for account $name to a level of $level on the realm $realmID.\n\n$level may range from 0 to 3.\n\n$reamID may be -1 for all realms.', @GMLEVEL_ADMIN),
('account set password', 'Syntax: .account set password $account $password $password', 'Set password for account.', @GMLEVEL_ADMIN),
('account set sec email', 'Syntax: .account set sec email $accountname $email $emailconfirmation', 'Set the email for entered player account.', @GMLEVEL_ADMIN),
('account set sec regmail', 'Syntax: .account set sec regmail $account $regmail $regmailconfirmation', 'Sets the regmail for entered player account.', @GMLEVEL_ADMIN),
('achievement', 'Syntax: .achievement $subcommand', 'Type .achievement to see the list of possible subcommands or .help achievement $subcommand to see info on subcommands', @GMLEVEL_ADMIN),
('achievement add', 'Syntax: .achievement add $achievement', 'Add an achievement to the targeted player.\n$achievement: can be either achievement id or achievement link', @GMLEVEL_ADMIN),
('additem', 'Syntax: .additem $itemid/[$itemname]/$shift-click-item-link $itemcount $bonusListIDs', 'Adds the specified number of items of id $itemid (or exact (!) name $itemname in brackets, or link created by shift-click at item in inventory or recipe) to your or selected character inventory. If $itemcount is omitted, only one item will be added. $bonusListIDs is a semicolon separated list of bonuses to add to item (such as Mythic/Heroic/Warforged/socket)', @GMLEVEL_PLAYER),
('additemset', 'Syntax: .additemset $itemsetid $bonusListIDs', 'Add items from itemset of id $itemsetid to your or selected character inventory. Will add by one example each item from itemset.\n\nIf the itemset has multiple levels it adds one of each item level. $bonusListIDs is a semicolon separated list of bonuses to add to all items (such as Mythic/Heroic/Warforged/socket)', @GMLEVEL_GM),
('announce', 'Syntax: .announce $MessageToBroadcast', 'Send a global message to all players online in chat log.', @GMLEVEL_GM),
('appear', 'Syntax: .appear [$charactername]', 'Teleport to the given character. Either specify the character name or click on the character\'s portrait,e.g. when you are in a group. Character can be offline.', @GMLEVEL_MODERATOR),
('arena captain', 'Syntax: .arena captain $TeamID $name', 'A command to set new captain to the team $name must be in the team', @GMLEVEL_ADMIN),
('arena create', 'Syntax: .arena create $name "arena name" $type', 'A command to create a new Arena-team in game. $type  = [2/3/5]', @GMLEVEL_ADMIN),
('arena disband', 'Syntax: .arena disband $TeamID', 'A command to disband Arena-team in game.', @GMLEVEL_ADMIN),
('arena info', 'Syntax: .arena info $TeamID', 'A command that show info about arena team', @GMLEVEL_ADMIN),
('arena lookup', 'Syntax: .arena lookup $name', 'A command that give a list of arenateam with the given $name', @GMLEVEL_ADMIN),
('arena rename', 'Syntax: .arena rename "oldname" "newname"', 'A command to rename Arena-team name.', @GMLEVEL_ADMIN),
('aura', 'Syntax: .aura $spellid', 'Add the aura from spell $spellid to the selected Unit.', @GMLEVEL_MODERATOR),
('ban', 'Syntax: .ban $subcommand', 'Type .ban to see the list of possible subcommands or .help ban $subcommand to see info on subcommands', @GMLEVEL_GM),
('ban account', 'Syntax: .ban account $Name $bantime $reason', 'Ban account kick player.\n$bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".', @GMLEVEL_GM),
('ban character', 'Syntax: .ban character $Name $bantime $reason', 'Ban character and kick player.\n$bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".', @GMLEVEL_GM),
('ban ip', 'Syntax: .ban ip $Ip $bantime $reason', 'Ban IP.\n$bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".', @GMLEVEL_GM),
('ban playeraccount', 'Syntax: .ban playeraccount $Name $bantime $reason', 'Ban account and kick player.\n$bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".', @GMLEVEL_GM),
('baninfo', 'Syntax: .baninfo $subcommand', 'Type .baninfo to see the list of possible subcommands or .help baninfo $subcommand to see info on subcommands', @GMLEVEL_GM),
('baninfo account', 'Syntax: .baninfo account $accountid', 'Watch full information about a specific ban.', @GMLEVEL_GM),
('baninfo character', 'Syntax: .baninfo character $charactername ', 'Watch full information about a specific ban.', @GMLEVEL_GM),
('baninfo ip', 'Syntax: .baninfo ip $ip', 'Watch full information about a specific ban.', @GMLEVEL_GM),
('bank', 'Syntax: .bank', 'Show your bank inventory.', @GMLEVEL_MODERATOR),
('banlist', 'Syntax: .banlist $subcommand', 'Type .banlist to see the list of possible subcommands or .help banlist $subcommand to see info on subcommands', @GMLEVEL_GM),
('banlist account', 'Syntax: .banlist account [$Name]', 'Searches the banlist for a account name pattern or show full list account bans.', @GMLEVEL_GM),
('banlist character', 'Syntax: .banlist character $Name', 'Searches the banlist for a character name pattern. Pattern required.', @GMLEVEL_GM),
('banlist ip', 'Syntax: .banlist ip [$Ip]', 'Searches the banlist for a IP pattern or show full list of IP bans.', @GMLEVEL_GM),
('bf enable', 'Syntax: .bf enable $battleid', '', @GMLEVEL_ADMIN),
('bf start', 'Syntax: .bf start $battleid', '', @GMLEVEL_ADMIN),
('bf stop', 'Syntax: .bf stop $battleid', '', @GMLEVEL_ADMIN),
('bf switch', 'Syntax: .bf switch $battleid', '', @GMLEVEL_ADMIN),
('bf timer', 'Syntax: .bf timer $battleid $timer', '', @GMLEVEL_ADMIN),
('bindsight', 'Syntax: .bindsight', 'Binds vision to the selected unit indefinitely. Cannot be used while currently possessing a target.', @GMLEVEL_MODERATOR),
('bnetaccount', 'Syntax: .bnetaccount $subcommand', 'Type .bnetaccount to see the list of possible subcommands or .help account set $subcommand to see info on subcommands.', @GMLEVEL_ADMIN),
('bnetaccount create', 'Syntax: .bnetaccount create $account $password', 'Create battle.net account and set password to it. Account must contain the @ symbol.', @GMLEVEL_ADMIN),
('bnetaccount gameaccountcreate', 'Syntax: .bnetaccount gameaccountcreate $account', 'Create additional game account for specified battle.net account.', @GMLEVEL_ADMIN),
('bnetaccount link', 'Syntax: .bnetaccount link $email $login', 'Links battle.net account ($email) to an existing game account ($login).', @GMLEVEL_ADMIN),
('bnetaccount lock country', 'Syntax: .bnetaccount lock country [on|off]', 'Allow login to account only from current used Country or remove this requirement.', @GMLEVEL_ADMIN),
('bnetaccount lock ip', 'Syntax: .bnetaccount lock ip [on|off]', 'Allow login to account only from current used IP or remove this requirement.', @GMLEVEL_ADMIN),
('bnetaccount password', 'Syntax: .bnetaccount password $old_password $new_password $new_password', 'Change your account password.', @GMLEVEL_ADMIN),
('bnetaccount set', 'Syntax: .bnetaccount set $subcommand', 'Type .bnetaccount set to see the list of possible subcommands or .help bnetaccount set $subcommand to see info on subcommands.', @GMLEVEL_ADMIN),
('bnetaccount set password', 'Syntax: .bnetaccount set password $account $password $password', 'Set password for account.', @GMLEVEL_ADMIN),
('bnetaccount unlink', 'Syntax: .bnetaccount unlink $gameaccount $password', 'Removes battle.net account link from $gameaccount', @GMLEVEL_ADMIN),
('cast', 'Syntax: .cast $spellid [triggered]', 'Cast $spellid to selected target. If no target selected cast to self. If \'trigered\' or part provided then spell casted with triggered flag.', @GMLEVEL_MODERATOR),
('cast back', 'Syntax: .cast back $spellid [triggered]', 'Selected target will cast $spellid to your character. If \'trigered\' or part provided then spell casted with triggered flag.', @GMLEVEL_MODERATOR),
('cast dest', 'Syntax: .cast dest $spellid $x $y $z [triggered]', 'Selected target will cast $spellid at provided destination. If \'trigered\' or part provided then spell casted with triggered flag.', @GMLEVEL_MODERATOR),
('cast dist', 'Syntax: .cast dist $spellid [$dist [triggered]]', 'You will cast spell to pint at distance $dist. If \'trigered\' or part provided then spell casted with triggered flag. Not all spells can be casted as area spells.', @GMLEVEL_MODERATOR),
('cast self', 'Syntax: .cast self $spellid [triggered]', 'Cast $spellid by target at target itself. If \'trigered\' or part provided then spell casted with triggered flag.', @GMLEVEL_MODERATOR),
('cast target', 'Syntax: .cast target $spellid [triggered]', 'Selected target will cast $spellid to his victim. If \'trigered\' or part provided then spell casted with triggered flag.', @GMLEVEL_MODERATOR),
('channel set ownership', 'Syntax: .channel set ownership $channel [on/off]', 'Grant ownership to the first person that joins the channel.', @GMLEVEL_GM),
('character changefaction', 'Syntax: .character changefaction $name', 'Change character faction.', @GMLEVEL_GM),
('character changerace', 'Syntax: .character changerace $name', 'Change character race.', @GMLEVEL_GM),
('character customize', 'Syntax: .character customize [$name]', 'Mark selected in game or by $name in command character for customize at next login.', @GMLEVEL_GM),
('character deleted list', 'Syntax: .character deleted list [$guid|$name]', 'Shows a list with all deleted characters.\nIf $name is supplied, only characters with that string in their name will be selected, if $guid is supplied, only the character with that GUID will be selected.', @GMLEVEL_GM),
('character deleted restore', 'Syntax: .character deleted restore $guid|$name [$newname] [$new account]', 'Restores deleted characters.\nIf $name is supplied, only characters with that string in their name will be restored, if $guid is supplied, only the character with that GUID will be restored.\nIf $newname is set, the character will be restored with that name instead of the original one. If $newaccount is set, the character will be restored to specific account character list. This works only with one character!', @GMLEVEL_GM),
('character level', 'Syntax: .character level [$playername] [$level]', 'Set the level of character with $playername (or the selected if not name provided) by $numberoflevels Or +1 if no $numberoflevels provided). If $numberoflevels is omitted, the level will be increase by 1. If $numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.', @GMLEVEL_GM),
('character rename', 'Syntax: .character rename [$name] [$newName] ', 'Mark selected in game or by $name in command character for rename at next login.\n\nIf $newName then the player will be forced rename.', @GMLEVEL_GM),
('character reputation', 'Syntax: .character reputation [$player_name]', 'Show reputation information for selected player or player find by $player_name.', @GMLEVEL_GM),
('character titles', 'Syntax: .character titles [$player_name]', 'Show known titles list for selected player or player find by $player_name.', @GMLEVEL_GM),
('cheat', 'Syntax: .cheat $subcommand', 'Type .cheat to see the list of possible subcommands or .help cheat $subcommand to see info on subcommands', @GMLEVEL_GM),
('cheat casttime', 'Syntax: .cheat casttime [on/off]', 'Enables or disables your character\'s spell cast times.', @GMLEVEL_GM),
('cheat cooldown', 'Syntax: .cheat cooldown [on/off]', 'Enables or disables your character\'s spell cooldowns.', @GMLEVEL_GM),
('cheat explore', 'Syntax: .cheat explore $flag', 'Reveal or hide all maps for the selected player. If no player is selected, hide or reveal maps to you.\nUse a $flag of value 1 to reveal, use a $flag value of 0 to hide all maps.', @GMLEVEL_GM),
('combatstop', 'Syntax: .combatstop [$playername]', 'Stop combat for selected character. If selected non-player then command applied to self. If $playername provided then attempt applied to online player $playername.', @GMLEVEL_MODERATOR),
('commands', 'Syntax: .commands', 'Display a list of available commands for your account level.', @GMLEVEL_PLAYER),
('cooldown', 'Syntax: .cooldown [$spell_id]', 'Remove all (if spell_id not provided) or $spel_id spell cooldown from selected character or you (if no selection).', @GMLEVEL_MODERATOR),
('debug', 'Syntax: .debug $subcommand', 'Type .debug to see the list of possible subcommands or .help debug $subcommand to see info on subcommands', @GMLEVEL_ADMIN),
('debug areatriggers', 'Syntax: .debug areatriggers', 'Toggle debug mode for areatriggers. In debug mode GM will be notified if reaching an areatrigger', @GMLEVEL_ADMIN),
('debug arena', 'Syntax: .debug arena', 'Toggle debug mode for arenas. In debug mode GM can start arena with single player.', @GMLEVEL_ADMIN),
('debug bg', 'Syntax: .debug bg', 'Toggle debug mode for battlegrounds. In debug mode GM can start battleground with single player.', @GMLEVEL_ADMIN),
('debug boundary', 'Syntax: .debug boundary [fill] [duration]', 'Flood fills the targeted unit\'s movement boundary and marks the edge of said boundary with debug creatures.\nSpecify \'fill\' as first parameter to fill the entire area with debug creatures.', @GMLEVEL_ADMIN),
('debug Mod32Value', 'Syntax: .debug Mod32Value $field $value', 'Add $value to field $field of your character.', @GMLEVEL_ADMIN),
('debug moveflags', 'Syntax: .debug moveflags [$newMoveFlags [$newMoveFlags2]]', 'No params given will output the current moveflags of the target', @GMLEVEL_ADMIN),
('debug play cinematic', 'Syntax: .debug play cinematic $cinematicid', 'Play cinematic $cinematicid for you. You stay at place while your mind fly.', @GMLEVEL_ADMIN),
('debug play movie', 'Syntax: .debug play movie $movieid', 'Play movie $movieid for you.', @GMLEVEL_ADMIN),
('debug play sound', 'Syntax: .debug play sound $soundid', 'Play sound with $soundid.\nSound will be play only for you. Other players do not hear this.\nWarning: client may have more 5000 sounds...', @GMLEVEL_ADMIN),
('debug send playscene', 'Syntax: .debug send playscene $SceneID $PlaybackFlags $SceneInstanceID $SceneScriptPackageID', '', @GMLEVEL_ADMIN),
('debug transport', 'Syntax: .debug transport [start/stop]', 'Allows to stop a transport at its nearest wait point and start movement of a stopped one. Not all transports can be started or stopped.', @GMLEVEL_ADMIN),
('demorph', 'Syntax: .demorph', 'Demorph the selected player.', @GMLEVEL_MODERATOR),
('dev', 'Syntax: .dev [on/off]', 'Enable or Disable in game Dev tag or show current state if on/off not provided.', @GMLEVEL_ADMIN),
('die', 'Syntax: .die', 'Kill the selected player. If no player is selected, it will kill you.', @GMLEVEL_GM),
('disable add achievement_criteria', 'Syntax: .disable add achievement_criteria $entry $flag $comment', '', @GMLEVEL_ADMIN),
('disable add battleground', 'Syntax: .disable add battleground $entry $flag $comment', '', @GMLEVEL_ADMIN),
('disable add map', 'Syntax: .disable add map $entry $flag $comment', '', @GMLEVEL_ADMIN),
('disable add mmap', 'Syntax: .disable add mmap $entry $flag $comment', '', @GMLEVEL_ADMIN),
('disable add outdoorpvp', 'Syntax: .disable add outdoorpvp $entry $flag $comment', '', @GMLEVEL_ADMIN),
('disable add quest', 'Syntax: .disable add quest $entry $flag $comment', '', @GMLEVEL_ADMIN),
('disable add spell', 'Syntax: .disable add spell $entry $flag $comment', '', @GMLEVEL_ADMIN),
('disable add vmap', 'Syntax: .disable add vmap $entry $flag $comment', '', @GMLEVEL_ADMIN),
('disable remove achievement_criteria', 'Syntax: .disable remove achievement_criteria $entry', '', @GMLEVEL_ADMIN),
('disable remove battleground', 'Syntax: .disable remove battleground $entry', '', @GMLEVEL_ADMIN),
('disable remove map', 'Syntax: .disable remove map $entry', '', @GMLEVEL_ADMIN),
('disable remove mmap', 'Syntax: .disable remove mmap $entry', '', @GMLEVEL_ADMIN),
('disable remove outdoorpvp', 'Syntax: .disable remove outdoorpvp $entry', '', @GMLEVEL_ADMIN),
('disable remove quest', 'Syntax: .disable remove quest $entry', '', @GMLEVEL_ADMIN),
('disable remove spell', 'Syntax: .disable remove spell $entry', '', @GMLEVEL_ADMIN),
('disable remove vmap', 'Syntax: .disable remove vmap $entry', '', @GMLEVEL_ADMIN),
('dismount', 'Syntax: .dismount', 'Dismount you, if you are mounted.', @GMLEVEL_PLAYER),
('distance', 'Syntax: .distance', 'Display the distance from your character to the selected creature.', @GMLEVEL_PLAYER),
('event', 'Syntax: .event $event_id', 'Show details about event with $event_id.', @GMLEVEL_ADMIN),
('event activelist', 'Syntax: .event activelist', 'Show list of currently active events.', @GMLEVEL_ADMIN),
('event start', 'Syntax: .event start $event_id', 'Start event $event_id. Set start time for event to current moment (change not saved in DB).', @GMLEVEL_ADMIN),
('event stop', 'Syntax: .event stop $event_id', 'Stop event $event_id. Set start time for event to time in past that make current moment is event stop time (change not saved in DB).', @GMLEVEL_ADMIN),
('gm', 'Syntax: .gm [on/off]', 'Enable or Disable in game GM MODE or show current state of on/off not provided.', @GMLEVEL_GM),
('gm chat', 'Syntax: .gm chat [on/off]', 'Enable or disable chat GM MODE (show gm badge in messages) or show current state of on/off not provided.', @GMLEVEL_GM),
('gm fly', 'Syntax: .gm fly [on/off]', 'Enable/disable gm fly mode.', @GMLEVEL_MODERATOR),
('gm ingame', 'Syntax: .gm ingame', 'Display a list of available in game Game Masters.', @GMLEVEL_PLAYER),
('gm list', 'Syntax: .gm list', 'Display a list of all Game Masters accounts and security levels.', @GMLEVEL_GM),
('gm visible', 'Syntax: .gm visible on/off', 'Output current visibility state or make GM visible(on) and invisible(off) for other players.', @GMLEVEL_GM),
('gmannounce', 'Syntax: .gmannounce $announcement', 'Send an announcement to online Gamemasters.', @GMLEVEL_GM),
('gmnameannounce', 'Syntax: .gmnameannounce $announcement.', 'Send an announcement to all online GM\'s, displaying the name of the sender.', @GMLEVEL_GM),
('gmnotify', 'Syntax: .gmnotify $notification', 'Displays a notification on the screen of all online GM\'s.', @GMLEVEL_GM),
('gps', 'Syntax: .gps [$name|$shift-link]', 'Display the position information for a selected character or creature (also if player name $name provided then for named player, or if creature/gameobject shift-link provided then pointed creature/gameobject if it loaded). Position information includes X, Y, Z, and orientation, map Id and zone Id', @GMLEVEL_PLAYER),
('group', 'Syntax: .group $subcommand', 'Type .group to see the list of possible subcommands or .help group $subcommand to see info on subcommands', @GMLEVEL_MODERATOR),
('group disband', 'Syntax: .group disband [$characterName]', 'Disbands the given character\'s group.', @GMLEVEL_GM),
('group join', 'Syntax: .group join $AnyCharacterNameFromGroup [$CharacterName] ', 'Adds to group of player $AnyCharacterNameFromGroup player $CharacterName (or selected).', @GMLEVEL_GM),
('group leader', 'Syntax: .group leader [$characterName]', 'Sets the given character as his group\'s leader.', @GMLEVEL_GM),
('group list', 'Syntax: .group list [$CharacterName] ', 'Lists all the members of the group/party the player is in.', @GMLEVEL_GM),
('group remove', 'Syntax: .group remove [$characterName]', 'Removes the given character from his group.', @GMLEVEL_GM),
('group summon', 'Syntax: .group summon [$charactername]', 'Teleport the given character and his group to you. Teleported only online characters but original selected group member can be offline.', @GMLEVEL_MODERATOR),
('guid', 'Syntax: .guid', 'Display the GUID for the selected character.', @GMLEVEL_PLAYER),
('guild', 'Syntax: .guild $subcommand', 'Type .guild to see the list of possible subcommands or .help guild $subcommand to see info on subcommands', @GMLEVEL_GM),
('guild create', 'Syntax: .guild create [$GuildLeaderName] "$GuildName"', 'Create a guild named $GuildName with the player $GuildLeaderName (or selected) as leader.  Guild name must in quotes.', @GMLEVEL_GM),
('guild delete', 'Syntax: .guild delete "$GuildName"', 'Delete guild $GuildName. Guild name must in quotes.', @GMLEVEL_GM),
('guild invite', 'Syntax: .guild invite [$CharacterName] "$GuildName"', 'Add player $CharacterName (or selected) into a guild $GuildName. Guild name must in quotes.', @GMLEVEL_GM),
('guild rank', 'Syntax: .guild rank [$CharacterName] $Rank', 'Set for player $CharacterName (or selected) rank $Rank in a guild.', @GMLEVEL_GM),
('guild rename', 'Syntax: .guild rename "$GuildName" "$NewGuildName" ', 'Rename a guild named $GuildName with $NewGuildName. Guild name and new guild name must in quotes.', @GMLEVEL_GM),
('guild uninvite', 'Syntax: .guild uninvite [$CharacterName]', 'Remove player $CharacterName (or selected) from a guild.', @GMLEVEL_GM),
('help', 'Syntax: .help [$command]', 'Display usage instructions for the given $command. If no $command provided show list available commands.', @GMLEVEL_PLAYER),
('hidearea', 'Syntax: .hidearea $areaid', 'Hide the area of $areaid to the selected character. If no character is selected, hide this area to you.', @GMLEVEL_ADMIN),
('instance', 'Syntax: .instance $subcommand', 'Type .instance to see the list of possible subcommands or .help instance $subcommand to see info on subcommands', @GMLEVEL_ADMIN),
('instance listbinds', 'Syntax: .instance listbinds', 'Lists the binds of the selected player.', @GMLEVEL_ADMIN),
('instance savedata', 'Syntax: .instance savedata', 'Save the InstanceData for the current player\'s map to the DB.', @GMLEVEL_ADMIN),
('instance stats', 'Syntax: .instance stats', 'Shows statistics about instances.', @GMLEVEL_ADMIN),
('instance unbind', 'Syntax: .instance unbind [$mapid|all] [difficulty]', 'Clear all/some of player\'s binds', @GMLEVEL_ADMIN),
('kick', 'Syntax: .kick [$charactername] [$reason]', 'Kick the given character name from the world with or without reason. If no character name is provided then the selected player (except for yourself) will be kicked. If no reason is provided, default is "No Reason".', @GMLEVEL_GM),
('learn', 'Syntax: .learn $spell [all]', 'Selected character learn a spell of id $spell. If \'all\' provided then all ranks learned.', @GMLEVEL_GM),
('learn all crafts', 'Syntax: .learn crafts', 'Learn all professions and recipes.', @GMLEVEL_GM),
('learn all default', 'Syntax: .learn all default [$playername]', 'Learn for selected/$playername player all default spells for his race/class and spells rewarded by completed quests.', @GMLEVEL_GM),
('learn all gm', 'Syntax: .learn all gm', 'Learn all default spells for Game Masters.', @GMLEVEL_GM),
('learn all lang', 'Syntax: .learn all lang', 'Learn all languages', @GMLEVEL_GM),
('learn all my class', 'Syntax: .learn all my class', 'Learn all spells and talents available for his class.', @GMLEVEL_GM),
('learn all my pettalents', 'Syntax: .learn all my pettalents', 'Learn all talents for your pet available for his creature type (only for hunter pets).', @GMLEVEL_GM),
('learn all my spells', 'Syntax: .learn all my spells', 'Learn all spells (except talents and spells with first rank learned as talent) available for his class.', @GMLEVEL_GM),
('learn all my talents', 'Syntax: .learn all my talents', 'Learn all talents (and spells with first rank learned as talent) available for his class.', @GMLEVEL_GM),
('learn all recipes', 'Syntax: .learn all recipes [$profession]', 'Learns all recipes of specified profession and sets skill level to max.\nExample: .learn all recipes enchanting', @GMLEVEL_GM),
('levelup', 'Syntax: .levelup [$playername] [$numberoflevels]', 'Increase/decrease the level of character with $playername (or the selected if not name provided) by $numberoflevels Or +1 if no $numberoflevels provided). If $numberoflevels is omitted, the level will be increase by 1. If $numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.', @GMLEVEL_ADMIN),
('linkgrave', 'Syntax: .linkgrave $graveyard_id [alliance|horde]', 'Link current zone to graveyard for any (or alliance/horde faction ghosts). This let character ghost from zone teleport to graveyard after die if graveyard is nearest from linked to zone and accept ghost of this faction. Add only single graveyard at another map and only if no graveyards linked (or planned linked at same map).', @GMLEVEL_GM),
('list', 'Syntax: .list $subcommand', 'Type .list to see the list of possible subcommands or .help list $subcommand to see info on subcommands', @GMLEVEL_MODERATOR),
('list auras', 'Syntax: .list auras', 'List auras (passive and active) of selected creature or player. If no creature or player is selected, list your own auras.', @GMLEVEL_MODERATOR),
('list creature', 'Syntax: .list creature $creature_id [$max_count]', 'Output creatures with creature id $creature_id found in world. Output creature guids and coordinates sorted by distance from character. Will be output maximum $max_count creatures. If $max_count not provided use 10 as default value.', @GMLEVEL_MODERATOR),
('list item', 'Syntax: .list item $item_id [$max_count]', 'Output items with item id $item_id found in all character inventories, mails, auctions, and guild banks. Output item guids, item owner guid, owner account and owner name (guild name and guid in case guild bank). Will be output maximum $max_count items. If $max_count not provided use 10 as default value.', @GMLEVEL_GM),
('list mail', 'Syntax: .list mail $character', 'List of mails the character received.', @GMLEVEL_GM),
('list object', 'Syntax: .list object $gameobject_id [$max_count]', 'Output gameobjects with gameobject id $gameobject_id found in world. Output gameobject guids and coordinates sorted by distance from character. Will be output maximum $max_count gameobject. If $max_count not provided use 10 as default value.', @GMLEVEL_MODERATOR),
('lookup', 'Syntax: .lookup $subcommand', 'Type .lookup to see the list of possible subcommands or .help lookup $subcommand to see info on subcommands', @GMLEVEL_PLAYER),
('lookup area', 'Syntax: .lookup area $namepart', 'Looks up an area by $namepart, and returns all matches with their area ID\'s.', @GMLEVEL_MODERATOR),
('lookup creature', 'Syntax: .lookup creature $namepart', 'Looks up a creature by $namepart, and returns all matches with their creature ID\'s.', @GMLEVEL_MODERATOR),
('lookup event', 'Syntax: .lookup event $name', 'Attempts to find the ID of the event with the provided $name.', @GMLEVEL_MODERATOR),
('lookup faction', 'Syntax: .lookup faction $name', 'Attempts to find the ID of the faction with the provided $name.', @GMLEVEL_MODERATOR),
('lookup itemset', 'Syntax: .lookup itemset $itemname', 'Looks up an item set by $itemname, and returns all matches with their Item set ID\'s.', @GMLEVEL_GM),
('lookup map', 'Syntax: .lookup map $namepart', 'Looks up a map by $namepart, and returns all matches with their map ID\'s.', @GMLEVEL_MODERATOR),
('lookup object', 'Syntax: .lookup object $objname', 'Looks up an gameobject by $objname, and returns all matches with their Gameobject ID\'s.', @GMLEVEL_MODERATOR),
('lookup player account', 'Syntax: .lookup player account $account ($limit) ', 'Searchs players, which account username is $account with optional parametr $limit of results.', @GMLEVEL_GM),
('lookup player email', 'Syntax: .lookup player email $email ($limit) ', 'Searchs players, which account email is $email with optional parametr $limit of results.', @GMLEVEL_GM),
('lookup player ip', 'Syntax: .lookup player ip $ip ($limit) ', 'Searchs players, which account ast_ip is $ip with optional parametr $limit of results.', @GMLEVEL_GM),
('lookup skill', 'Syntax: .lookup skill $$namepart', 'Looks up a skill by $namepart, and returns all matches with their skill ID\'s.', @GMLEVEL_MODERATOR),
('lookup spell', 'Syntax: .lookup spell $namepart', 'Looks up a spell by $namepart, and returns all matches with their spell ID\'s.', @GMLEVEL_MODERATOR),
('lookup spell id', 'Syntax: .lookup spell id $spellid', 'Looks up a spell by $spellid, and returns the match with its spell name.', @GMLEVEL_MODERATOR),
('lookup taxinode', 'Syntax: .lookup taxinode $substring', 'Search and output all taxinodes with provide $substring in name.', @GMLEVEL_MODERATOR),
('lookup tele', 'Syntax: .lookup tele $substring', 'Search and output all .tele command locations with provide $substring in name.', @GMLEVEL_MODERATOR),
('lookup title', 'Syntax: .lookup title $$namepart', 'Looks up a title by $namepart, and returns all matches with their title ID\'s and index\'s.', @GMLEVEL_MODERATOR),
('maxskill', 'Syntax: .maxskill', 'Sets all skills of the targeted player to their maximum values for its current level.', @GMLEVEL_GM),
('mmap', 'Syntax: Syntax: .mmaps $subcommand Type .mmaps to see the list of possible subcommands or .help mmaps $subcommand to see info on subcommands', '', @GMLEVEL_ADMIN),
('mmap loadedtiles', 'Syntax: .mmap loadedtiles to show which tiles are currently loaded', '', @GMLEVEL_ADMIN),
('mmap loc', 'Syntax: .mmap loc to print on which tile one is', '', @GMLEVEL_ADMIN),
('mmap path', 'Syntax: .mmap path to calculate and show a path to current select unit', '', @GMLEVEL_ADMIN),
('mmap stats', 'Syntax: .mmap stats to show information about current state of mmaps', '', @GMLEVEL_ADMIN),
('mmap testarea', 'Syntax: .mmap testarea to calculate paths for all nearby npcs to player', '', @GMLEVEL_ADMIN),
('modify', 'Syntax: .modify $subcommand', 'Type .modify to see the list of possible subcommands or .help modify $subcommand to see info on subcommands', @GMLEVEL_MODERATOR),
('modify all', 'Syntax: .modify all $rate', 'Modify all speeds -run,swim,run back,swim back- of the selected player to "normalbase speed for this move type"*rate. If no player is selected, modify your speed.\n\n $rate may range from 0.1 to 50.', @GMLEVEL_MODERATOR),
('modify drunk', 'Syntax: .modify drunk $value', 'Set drunk level to $value (0..10@GMLEVEL_PLAYER). Value 0 remove drunk state, 100 is max drunked state.', @GMLEVEL_MODERATOR),
('modify faction', 'Syntax: .modify faction $factionid $flagid $npcflagid $dynamicflagid', 'Modify the faction and flags of the selected creature. Without arguments, display the faction and flags of the selected creature.', @GMLEVEL_MODERATOR),
('modify fly', 'Syntax: .modify fly $rate', 'Modify the flying speed of the selected player to "normal flying speed"*rate. If no player is selected, modify your speed.\n $rate may range from 0.1 to 50.', @GMLEVEL_MODERATOR),
('modify mount', 'Syntax: .modify mount $id $speed', 'Display selected player as mounted at $id creature and set speed to $speed value.', @GMLEVEL_MODERATOR),
('modify scale', 'Syntax: .modify scale $scale', 'Modify size of the selected player or creature to "normal scale"*rate. If no player or creature is selected, modify your size.\n$rate may range from 0.1 to 10.', @GMLEVEL_MODERATOR),
('modify speed', 'Syntax: .modify speed $speedtype $rate', 'Modify the running speed of the selected player to "normal base run speed"= 1. If no player is selected, modify your speed.\n\n$speedtypes may be fly, all, walk, backwalk, or swim.\n\n $rate may range from 0.1 to 50.', @GMLEVEL_MODERATOR),
('modify standstate', 'Syntax: .modify standstate $emoteid', 'Change the emote of your character while standing to $emoteid.', @GMLEVEL_MODERATOR),
('modify swim', 'Syntax: .modify swim $rate', 'Modify the swim speed of the selected player to "normal swim speed"*rate. If no player is selected, modify your speed.\n\n $rate may range from 0.1 to 50.', @GMLEVEL_MODERATOR),
('modify walk', 'Syntax: .modify bwalk $rate', 'Modify the speed of the selected player while running to "normal walk speed"*rate. If no player is selected, modify your speed.\n\n $rate may range from 0.1 to 50.', @GMLEVEL_MODERATOR),
('morph', 'Syntax: .morph $displayid', 'Change your current model id to $displayid.', @GMLEVEL_MODERATOR),
('movegens', 'Syntax: .movegens', 'Show movement generators stack for selected creature or player.', @GMLEVEL_ADMIN),
('mute', 'Syntax: .mute [$playerName] $timeInMinutes [$reason]', 'Disible chat messaging for any character from account of character $playerName (or currently selected) at $timeInMinutes minutes. Player can be offline.', @GMLEVEL_GM),
('nameannounce', 'Syntax: .nameannounce $announcement.', 'Send an announcement to all online players, displaying the name of the sender.', @GMLEVEL_GM),
('neargrave', 'Syntax: .neargrave [alliance|horde]', 'Find nearest graveyard linked to zone (or only nearest from accepts alliance or horde faction ghosts).', @GMLEVEL_GM),
('notify', 'Syntax: .notify $MessageToBroadcast', 'Send a global message to all players online in screen.', @GMLEVEL_GM),
('pdump', 'Syntax: .pdump $subcommand', 'Type .pdump to see the list of possible subcommands or .help pdump $subcommand to see info on subcommands', @GMLEVEL_ADMIN),
('pdump load', 'Syntax: .pdump load $filename $account [$newname] [$newguid]', 'Load character dump from dump file into character list of $account with saved or $newname, with saved (or first free) or $newguid guid.', @GMLEVEL_ADMIN),
('pdump write', 'Syntax: .pdump write $filename $playerNameOrGUID', 'Write character dump with name/guid $playerNameOrGUID to file $filename.', @GMLEVEL_ADMIN),
('pet', 'Syntax: .pet $subcommand', 'Type .pet to see the list of possible subcommands or .help pet $subcommand to see info on subcommands', @GMLEVEL_GM),
('pet create', 'Syntax: .pet create', 'Creates a pet of the selected creature.', @GMLEVEL_GM),
('pet learn', 'Syntax: .pet learn', 'Learn $spellid to pet.', @GMLEVEL_GM),
('pet unlearn', 'Syntax: .pet unlean', 'unLearn $spellid to pet.', @GMLEVEL_GM),
('pinfo', 'Syntax: .pinfo [$player_name/$GUID]', 'Output account information and guild information for selected player or player find by $player_name or $GUID.', @GMLEVEL_GM),
('playall', 'Syntax: .playall $soundid', 'Player a sound to whole server.', @GMLEVEL_ADMIN),
('possess', 'Syntax: .possess', 'Possesses indefinitely the selected creature.', @GMLEVEL_MODERATOR),
('rbac account deny', 'Syntax: rbac account deny [$account] $id [$realmId]', 'Deny a permission to selected player or given account.\n\n$reamID may be -1 for all realms.', @GMLEVEL_ADMIN),
('rbac account grant', 'Syntax: rbac account grant [$account] $id [$realmId]', 'Grant a permission to selected player or given account.\n\n$reamID may be -1 for all realms.', @GMLEVEL_ADMIN),
('rbac account list', 'Syntax: rbac account list [$account]', 'View permissions of selected player or given account\nNote: Only those that affect current realm', @GMLEVEL_ADMIN),
('rbac account revoke', 'Syntax: rbac account revoke [$account] $id', 'Remove a permission from an account\n\nNote: Removes the permission from granted or denied permissions', @GMLEVEL_ADMIN),
('rbac list', 'Syntax: rbac list [$id]', 'View list of all permissions. If $id is given will show only info for that permission.', @GMLEVEL_ADMIN),
('recall', 'Syntax: .recall [$playername]', 'Teleport $playername or selected player to the place where he has been before last use of a teleportation command. If no $playername is entered and no player is selected, it will teleport you.', @GMLEVEL_MODERATOR),
('reload', 'Syntax: .reload $subcommand', 'Type .reload to see the list of possible subcommands or .help reload $subcommand to see info on subcommands', @GMLEVEL_GM),
('reload access_requirement', 'Syntax: .reload access_requirement', 'Reload access_requirement table.', @GMLEVEL_ADMIN),
('reload achievement_criteria_data', 'Syntax: .reload achievement_criteria_data', 'Reload achievement_criteria_data table.', @GMLEVEL_ADMIN),
('reload achievement_reward', 'Syntax: .reload achievement_reward', 'Reload achievement_reward table.', @GMLEVEL_ADMIN),
('reload all', 'Syntax: .reload all', 'Reload all tables with reload support added and that can be _safe_ reloaded.', @GMLEVEL_ADMIN),
('reload all achievement', 'Syntax: .reload all achievement', 'Reload achievement_reward, achievement_criteria_data tables.', @GMLEVEL_ADMIN),
('reload all area', 'Syntax: .reload all area', 'Reload areatrigger_teleport, areatrigger_tavern, graveyard_zone tables.', @GMLEVEL_ADMIN),
('reload all gossips', 'Syntax: .reload all gossips', 'Reload gossip_menu, gossip_menu_option, gossip_scripts, points_of_interest tables.', @GMLEVEL_ADMIN),
('reload all item', 'Syntax: .reload all item', 'Reload page_text, item_enchantment_table tables.', @GMLEVEL_ADMIN),
('reload all locales', 'Syntax: .reload all locales', 'Reload all `locales_*` tables with reload support added and that can be _safe_ reloaded.', @GMLEVEL_ADMIN),
('reload all loot', 'Syntax: .reload all loot', 'Reload all `*_loot_template` tables. This can be slow operation with lags for server run.', @GMLEVEL_ADMIN),
('reload all npc', 'Syntax: .reload all npc', 'Reload npc_option, npc_trainer, npc vendor, points of interest tables.', @GMLEVEL_ADMIN),
('reload all quest', 'Syntax: .reload all quest', 'Reload all quest related tables if reload support added for this table and this table can be _safe_ reloaded.', @GMLEVEL_ADMIN),
('reload all scripts', 'Syntax: .reload all scripts', 'Reload gameobject_scripts, event_scripts, quest_end_scripts, quest_start_scripts, spell_scripts, db_script_string, waypoint_scripts tables.', @GMLEVEL_ADMIN),
('reload areatrigger_involvedrelation', 'Syntax: .reload areatrigger_involvedrelation', 'Reload areatrigger_involvedrelation table.', @GMLEVEL_ADMIN),
('reload areatrigger_tavern', 'Syntax: .reload areatrigger_tavern', 'Reload areatrigger_tavern table.', @GMLEVEL_ADMIN),
('reload areatrigger_teleport', 'Syntax: .reload areatrigger_teleport', 'Reload areatrigger_teleport table.', @GMLEVEL_ADMIN),
('reload auctions', 'Syntax: .reload auctions', 'Reload dynamic data tables from the database.', @GMLEVEL_ADMIN),
('reload autobroadcast', 'Syntax: .reload autobroadcast', 'Reload autobroadcast table.', @GMLEVEL_ADMIN),
('reload battleground_template', 'Syntax: .reload battleground_template', 'Reload Battleground Templates.', @GMLEVEL_ADMIN),
('reload command', 'Syntax: .reload command', 'Reload command table.', @GMLEVEL_ADMIN),
('reload conditions', 'Syntax: .reload conditions', 'Reload conditions table.', @GMLEVEL_ADMIN),
('reload config', 'Syntax: .reload config', 'Reload config settings (by default stored in trinityd.conf). Not all settings can be change at reload: some new setting values will be ignored until restart, some values will applied with delay or only to new objects/maps, some values will explicitly rejected to change at reload.', @GMLEVEL_ADMIN),
('reload creature_linked_respawn', 'Syntax: .reload creature_linked_respawn', 'Reload creature_linked_respawn table.', @GMLEVEL_ADMIN),
('reload creature_loot_template', 'Syntax: .reload creature_loot_template', 'Reload creature_loot_template table.', @GMLEVEL_ADMIN),
('reload creature_onkill_reputation', 'Syntax: .reload creature_onkill_reputation', 'Reload creature_onkill_reputation table.', @GMLEVEL_ADMIN),
('reload creature_questender', 'Syntax: .reload creature_questender', 'Reload creature_questender table.', @GMLEVEL_ADMIN),
('reload creature_queststarter', 'Syntax: .reload creature_queststarter', 'Reload creature_queststarter table.', @GMLEVEL_ADMIN),
('reload creature_summon_groups', 'Syntax: .reload creature_summon_groups', 'Reload creature_summon_groups table.', @GMLEVEL_ADMIN),
('reload creature_template', 'Syntax: .reload creature_template $entry', 'Reload the specified creature\'s template.', @GMLEVEL_ADMIN),
('reload creature_text', 'Syntax: .reload creature_text', 'Reload creature_text Table.', @GMLEVEL_ADMIN),
('reload disables', 'Syntax: .reload disables', 'Reload disables table.', @GMLEVEL_ADMIN),
('reload disenchant_loot_template', 'Syntax: .reload disenchant_loot_template', 'Reload disenchant_loot_template table.', @GMLEVEL_ADMIN),
('reload event_scripts', 'Syntax: .reload event_scripts', 'Reload event_scripts table.', @GMLEVEL_ADMIN),
('reload fishing_loot_template', 'Syntax: .reload fishing_loot_template', 'Reload fishing_loot_template table.', @GMLEVEL_ADMIN),
('reload gameobject_loot_template', 'Syntax: .reload gameobject_loot_template', 'Reload gameobject_loot_template table.', @GMLEVEL_ADMIN),
('reload gameobject_questender', 'Syntax: .reload gameobject_questender', 'Reload gameobject_questender table.', @GMLEVEL_ADMIN),
('reload gameobject_queststarter', 'Syntax: .reload gameobject_queststarter', 'Reload gameobject_queststarter table.', @GMLEVEL_ADMIN),
('reload game_tele', 'Syntax: .reload game_tele', 'Reload game_tele table.', @GMLEVEL_ADMIN),
('reload gossip_menu', 'Syntax: .reload gossip_menu', 'Reload gossip_menu table.', @GMLEVEL_ADMIN),
('reload gossip_menu_option', 'Syntax: .reload gossip_menu_option', 'Reload gossip_menu_option table.', @GMLEVEL_ADMIN),
('reload graveyard_zone', 'Syntax: .reload graveyard_zone', 'Reload graveyard_zone table.', @GMLEVEL_ADMIN),
('reload item_enchantment_template', 'Syntax: .reload item_enchantment_template', 'Reload item_enchantment_template table.', @GMLEVEL_ADMIN),
('reload item_loot_template', 'Syntax: .reload item_loot_template', 'Reload item_loot_template table.', @GMLEVEL_ADMIN),
('reload lfg_dungeon_rewards', 'Syntax: .reload lfg_dungeon_rewards', 'Reload lfg_dungeon_rewards table.', @GMLEVEL_ADMIN),
('reload locales_creature', 'Syntax: .reload locales_creature', 'Reload locales_creature table.', @GMLEVEL_ADMIN),
('reload locales_creature_text', 'Syntax: .reload locales_creature_text', 'Reload locales_creature_text Table.', @GMLEVEL_ADMIN),
('reload locales_gameobject', 'Syntax: .reload locales_gameobject', 'Reload locales_gameobject table.', @GMLEVEL_ADMIN),
('reload locales_gossip_menu_option', 'Syntax: .reload locales_gossip_menu_option', 'Reload locales_gossip_menu_option table.', @GMLEVEL_ADMIN),
('reload locales_page_text', 'Syntax: .reload locales_page_text', 'Reload locales_page_text table.', @GMLEVEL_ADMIN),
('reload locales_points_of_interest', 'Syntax: .reload locales_points_of_interest', 'Reload locales_point_of_interest table.', @GMLEVEL_ADMIN),
('reload mail_level_reward', 'Syntax: .reload mail_level_reward', 'Reload mail_level_reward table.', @GMLEVEL_ADMIN),
('reload mail_loot_template', 'Syntax: .reload quest_mail_loot_template', 'Reload quest_mail_loot_template table.', @GMLEVEL_ADMIN),
('reload milling_loot_template', 'Syntax: .reload milling_loot_template', 'Reload milling_loot_template table.', @GMLEVEL_ADMIN),
('reload npc_trainer', 'Syntax: .reload npc_trainer', 'Reload npc_trainer table.', @GMLEVEL_ADMIN),
('reload npc_vendor', 'Syntax: .reload npc_vendor', 'Reload npc_vendor table.', @GMLEVEL_ADMIN),
('reload page_text', 'Syntax: .reload page_text', 'Reload page_text table.', @GMLEVEL_ADMIN),
('reload pickpocketing_loot_template', 'Syntax: .reload pickpocketing_loot_template', 'Reload pickpocketing_loot_template table.', @GMLEVEL_ADMIN),
('reload points_of_interest', 'Syntax: .reload points_of_interest', 'Reload points_of_interest table.', @GMLEVEL_ADMIN),
('reload prospecting_loot_template', 'Syntax: .reload prospecting_loot_template', 'Reload prospecting_loot_template table.', @GMLEVEL_ADMIN),
('reload quest_greeting', 'Syntax: .reload quest_greeting', 'Reload quest_greeting table.', @GMLEVEL_ADMIN),
('reload quest_locale', 'Syntax: .reload quest_locale', 'Reload all quest_*_locale tables.', @GMLEVEL_ADMIN),
('reload quest_poi', 'Syntax: .reload quest_poi', 'Reload quest_poi table.', @GMLEVEL_ADMIN),
('reload quest_template', 'Syntax: .reload quest_template', 'Reload quest_template table.', @GMLEVEL_ADMIN),
('reload rbac', 'Syntax: .reload rbac', 'Reload rbac system.', @GMLEVEL_ADMIN),
('reload reference_loot_template', 'Syntax: .reload reference_loot_template', 'Reload reference_loot_template table.', @GMLEVEL_ADMIN),
('reload reputation_reward_rate', 'Syntax: .reload reputation_reward_rate', 'Reload reputation_reward_rate table.', @GMLEVEL_ADMIN),
('reload reputation_spillover_template', 'Syntax: .reload reputation_spillover_template', 'Reload reputation_spillover_template table.', @GMLEVEL_ADMIN),
('reload reserved_name', 'Syntax: .reload reserved_name', 'Reload reserved_name table.', @GMLEVEL_ADMIN),
('reload skill_discovery_template', 'Syntax: .reload skill_discovery_template', 'Reload skill_discovery_template table.', @GMLEVEL_ADMIN),
('reload skill_extra_item_template', 'Syntax: .reload skill_extra_item_template', 'Reload skill_extra_item_template table.', @GMLEVEL_ADMIN),
('reload skill_fishing_base_level', 'Syntax: .reload skill_fishing_base_level', 'Reload skill_fishing_base_level table.', @GMLEVEL_ADMIN),
('reload skinning_loot_template', 'Syntax: .reload skinning_loot_template', 'Reload skinning_loot_template table.', @GMLEVEL_ADMIN),
('reload smart_scripts', 'Syntax: .reload smart_scripts', 'Reload smart_scripts table.', @GMLEVEL_ADMIN),
('reload spell_area', 'Syntax: .reload spell_area', 'Reload spell_area table.', @GMLEVEL_ADMIN),
('reload spell_group', 'Syntax: .reload spell_group', 'Reload spell_group table.', @GMLEVEL_ADMIN),
('reload spell_group_stack_rules', 'Syntax: .reload spell_group', 'Reload spell_group_stack_rules table.', @GMLEVEL_ADMIN),
('reload spell_learn_spell', 'Syntax: .reload spell_learn_spell', 'Reload spell_learn_spell table.', @GMLEVEL_ADMIN),
('reload spell_linked_spell', 'Syntax: .reload spell_linked_spell', 'Reloads the spell_linked_spell DB table.', @GMLEVEL_ADMIN),
('reload spell_loot_template', 'Syntax: .reload spell_loot_template', 'Reload spell_loot_template table.', @GMLEVEL_ADMIN),
('reload spell_pet_auras', 'Syntax: .reload spell_pet_auras', 'Reload spell_pet_auras table.', @GMLEVEL_ADMIN),
('reload spell_proc', 'Syntax: .reload spell_proc', 'Reload spell_proc table.', @GMLEVEL_ADMIN),
('reload spell_proc_event', 'Syntax: .reload spell_proc_event', 'Reload spell_proc_event table.', @GMLEVEL_ADMIN),
('reload spell_required', 'Syntax: .reload spell_required', 'Reload spell_required table.', @GMLEVEL_ADMIN),
('reload spell_scripts', 'Syntax: .reload spell_scripts', 'Reload spell_scripts table.', @GMLEVEL_ADMIN),
('reload spell_target_position', 'Syntax: .reload spell_target_position', 'Reload spell_target_position table.', @GMLEVEL_ADMIN),
('reload spell_threats', 'Syntax: .reload spell_threats', 'Reload spell_threats table.', @GMLEVEL_ADMIN),
('reload support', 'Syntax: .reload support', 'Reload support system tables.', @GMLEVEL_ADMIN),
('reload trinity_string', 'Syntax: .reload trinity_string', 'Reload trinity_string table.', @GMLEVEL_ADMIN),
('reload vehicle_accessory', 'Syntax: .reload vehicle_accessory', 'Reloads GUID-based vehicle accessory definitions from the database.', @GMLEVEL_ADMIN),
('reload vehicle_template_accessory', 'Syntax: .reload vehicle_template_accessory', 'Reloads entry-based vehicle accessory definitions from the database.', @GMLEVEL_ADMIN),
('reload warden_action', 'Syntax: .reload warden_action', 'Reload warden_action.', @GMLEVEL_ADMIN),
('reload waypoint_data', 'Syntax: .reload waypoint_data', 'Reload waypoint_data table.', @GMLEVEL_ADMIN),
('reload waypoint_scripts', 'Syntax: .reload waypoint_scripts', 'Reload waypoint_scripts table.', @GMLEVEL_ADMIN),
('reset', 'Syntax: .reset $subcommand', 'Type .reset to see the list of possible subcommands or .help reset $subcommand to see info on subcommands', @GMLEVEL_ADMIN),
('reset achievements', 'Syntax: .reset achievements [$playername]', 'Reset achievements data for selected or named (online or offline) character. Achievements for persistance progress data like completed quests/etc re-filled at reset. Achievements for events like kills/casts/etc will lost.', @GMLEVEL_ADMIN),
('reset all', 'Syntax: .reset all spells', 'Syntax: .reset all talents\n\nRequest reset spells or talents (including talents for all character\'s pets if any) at next login each existed character.', @GMLEVEL_ADMIN),
('reset honor', 'Syntax: .reset honor [Playername]', 'Reset all honor data for targeted character.', @GMLEVEL_ADMIN),
('reset level', 'Syntax: .reset level [Playername]', 'Reset level to 1 including reset stats and talents.  Equipped items with greater level requirement can be lost.', @GMLEVEL_ADMIN),
('reset spells', 'Syntax: .reset spells [Playername]', 'Removes all non-original spells from spellbook.\n. Playername can be name of offline character.', @GMLEVEL_ADMIN),
('reset stats', 'Syntax: .reset stats [Playername]', 'Resets(recalculate) all stats of the targeted player to their original VALUESat current level.', @GMLEVEL_ADMIN),
('reset talents', 'Syntax: .reset talents [Playername]', 'Removes all talents of the targeted player or pet or named player. Playername can be name of offline character. With player talents also will be reset talents for all character\'s pets if any.', @GMLEVEL_ADMIN),
('respawn', 'Syntax: .respawn', 'Respawn all nearest creatures and GO without waiting respawn time expiration.', @GMLEVEL_GM),
('revive', 'Syntax: .revive', 'Revive the selected player. If no player is selected, it will revive you.', @GMLEVEL_MODERATOR),
('save', 'Syntax: .save', 'Saves your character.', @GMLEVEL_GM),
('saveall', 'Syntax: .saveall', 'Save all characters in game.', @GMLEVEL_GM),
('send items', 'Syntax: .send items $playername "$subject" "$text" itemid1[:count1] itemid2[:count2] ... itemidN[:countN]', 'Send a mail to a player. Subject and mail text must be in "". If for itemid not provided related count values then expected 1, if count > max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12.', @GMLEVEL_ADMIN),
('send mail', 'Syntax: .send mail $playername "$subject" "$text"', 'Send a mail to a player. Subject and mail text must be in "".', @GMLEVEL_ADMIN),
('send message', 'Syntax: .send message $playername $message', 'Send screen message to player from ADMINISTRATOR.', @GMLEVEL_ADMIN),
('send money', 'Syntax: .send money $playername "$subject" "$text" $money', 'Send mail with money to a player. Subject and mail text must be in "".', @GMLEVEL_ADMIN),
('server', 'Syntax: .server $subcommand', 'Type .server to see the list of possible subcommands or .help server $subcommand to see info on subcommands', @GMLEVEL_ADMIN),
('server corpses', 'Syntax: .server corpses', 'Triggering corpses expire check in world.', @GMLEVEL_ADMIN),
('server exit', 'Syntax: .server exit', 'Terminate trinity-core NOW. Exit code 0.', @GMLEVEL_ADMIN),
('server idlerestart', 'Syntax: .server idlerestart $delay [$exit_code] [reason]', 'Restart the server after $delay seconds if no active connections are present (no players). Use $exit_code or 2 as program exit code.', @GMLEVEL_ADMIN),
('server idlerestart cancel', 'Syntax: .server idlerestart cancel', 'Cancel the restart/shutdown timer if any.', @GMLEVEL_ADMIN),
('server idleshutdown', 'Syntax: .server idleshutdown $delay [$exit_code] [reason]', 'Shut the server down after $delay seconds if no active connections are present (no players). Use $exit_code or 0 as program exist code.', @GMLEVEL_ADMIN),
('server idleshutdown cancel', 'Syntax: .server idleshutdown cancel', 'Cancel the restart/shutdown timer if any.', @GMLEVEL_ADMIN),
('server info', 'Syntax: .server info', 'Display server version and the number of connected players.', @GMLEVEL_ADMIN),
('server motd', 'Syntax: .server motd', 'Show server Message of the day.', @GMLEVEL_ADMIN),
('server plimit', 'Syntax: .server plimit [$num|-1|-2|-3|reset|player|moderator|gamemaster|administrator]', 'Without arg show current player amount and security level limitations for login to server, with arg set player linit ($num > @GMLEVEL_PLAYER) or securiti limitation ($num < 0 or security leme name. With `reset` sets player limit to the one in the config file', @GMLEVEL_ADMIN),
('server restart', 'Syntax: .server restart $delay [$exit_code] [reason]', 'Restart the server after $delay seconds. Use $exit_code or 2 as program exist code.', @GMLEVEL_ADMIN),
('server restart cancel', 'Syntax: .server restart cancel', 'Cancel the restart/shutdown timer if any.', @GMLEVEL_ADMIN),
('server set closed', 'Syntax: server set closed on/off', 'Sets whether the world accepts new client connectsions.', @GMLEVEL_ADMIN),
('server set loglevel', 'Syntax: .server set loglevel $facility $name $loglevel', '$facility can take the values: appender (a) or logger (l). $loglevel can take the values: disabled (@GMLEVEL_PLAYER), trace (@GMLEVEL_MODERATOR), debug (@GMLEVEL_GM), info (@GMLEVEL_ADMIN), warn (4), error (5) or fatal (6)', @GMLEVEL_ADMIN),
('server set motd', 'Syntax: .server set motd $MOTD', 'Set server Message of the day.', @GMLEVEL_ADMIN),
('server shutdown', 'Syntax: .server shutdown $delay [$exit_code] [reason]', 'Shut the server down after $delay seconds. Use $exit_code or 0 as program exit code.', @GMLEVEL_ADMIN),
('server shutdown cancel', 'Syntax: .server shutdown cancel', 'Cancel the restart/shutdown timer if any.', @GMLEVEL_ADMIN),
('setskill', 'Syntax: .setskill $skill $level [$max]', 'Set a skill of id $skill with a current skill value of $level and a maximum value of $max (or equal current maximum if not provide) for the selected character. If no character is selected, you learn the skill.', @GMLEVEL_GM),
('showarea', 'Syntax: .showarea $areaid', 'Reveal the area of $areaid to the selected character. If no character is selected, reveal this area to you.', @GMLEVEL_ADMIN),
('summon', 'Syntax: .summon [$charactername]', 'Teleport the given character to you. Character can be offline.', @GMLEVEL_MODERATOR),
('tele', 'Syntax: .tele $location', 'Teleport player to a given location.', @GMLEVEL_MODERATOR),
('tele add', 'Syntax: .tele add $name', 'Add current your position to .tele command target locations list with name $name.', @GMLEVEL_MODERATOR),
('tele del', 'Syntax: .tele del $name', 'Remove location with name $name for .tele command locations list.', @GMLEVEL_MODERATOR),
('tele group', 'Syntax: .tele group$location', 'Teleport a selected player and his group members to a given location.', @GMLEVEL_GM),
('tele name', 'Syntax: .tele name [$playername] $location', 'Teleport the given character to a given location. Character can be offline.\n\nTo teleport to homebind, set $location to "$home" (without quotes).', @GMLEVEL_MODERATOR),
('ticket', 'Syntax: .ticket $subcommand', 'Type .ticket to see the list of possible subcommands or .help ticket $subcommand to see info on subcommands', @GMLEVEL_GM),
('ticket reset', 'Syntax: .ticket reset', 'Removes all closed tickets and resets the counter, if no pending open tickets are existing.', @GMLEVEL_GM),
('titles add', 'Syntax: .titles add $title', 'Add title $title (id or shift-link) to known titles list for selected player.', @GMLEVEL_GM),
('titles current', 'Syntax: .titles current $title', 'Set title $title (id or shift-link) as current selected title for selected player. If title is not in known title list for player then it will be added to list.', @GMLEVEL_GM),
('titles remove', 'Syntax: .titles remove $title', 'Remove title $title (id or shift-link) from known titles list for selected player.', @GMLEVEL_GM),
('titles set mask', 'Syntax: .titles set mask $mask', 'Allows user to use all titles from $mask.\n\n $mask=0 disables the title-choose-field', @GMLEVEL_GM),
('unaura', 'Syntax: .unaura $spellid', 'Remove aura due to spell $spellid from the selected Unit.', @GMLEVEL_MODERATOR),
('unban', 'Syntax: .unban $subcommand', 'Type .unban to see the list of possible subcommands or .help unban $subcommand to see info on subcommands', @GMLEVEL_GM),
('unban account', 'Syntax: .unban account $Name', 'Unban accounts for account name pattern.', @GMLEVEL_GM),
('unban character', 'Syntax: .unban character $Name', 'Unban accounts for character name pattern.', @GMLEVEL_GM),
('unban ip', 'Syntax : .unban ip $Ip', 'Unban accounts for IP pattern.', @GMLEVEL_GM),
('unbindsight', 'Syntax: .unbindsight', 'Removes bound vision. Cannot be used while currently possessing a target.', @GMLEVEL_MODERATOR),
('unlearn', 'Syntax: .unlearn $spell [all]', 'Unlearn for selected player a spell $spell.  If \'all\' provided then all ranks unlearned.', @GMLEVEL_GM),
('unmute', 'Syntax: .unmute [$playerName]', 'Restore chat messaging for any character from account of character $playerName (or selected). Character can be ofline.', @GMLEVEL_GM),
('unpossess', 'Syntax: .unpossess', 'If you are possessed, unpossesses yourself; otherwise unpossesses current possessed target.', @GMLEVEL_MODERATOR),
('wchange', 'Syntax: .wchange $weathertype $status', 'Set current weather to $weathertype with an intensity of $status.\n\n$weathertype can be 1 for rain, 2 for snow, and 3 for sand. $status can be 0 for disabled, and 1 for enabled.', @GMLEVEL_MODERATOR),
('whispers', 'Syntax: .whispers on|off', 'Enable/disable accepting whispers by GM from players. By default use trinityd.conf setting.', @GMLEVEL_GM),
('wp add', 'Syntax: .wp add', 'Add a waypoint for the selected creature at your current position.', @GMLEVEL_MODERATOR),
('wp event', 'Syntax: .wp event $subcommand', 'Type .path event to see the list of possible subcommands or .help path event $subcommand to see info on subcommands.', @GMLEVEL_MODERATOR),
('wp load', 'Syntax: .wp load $pathid', 'Load pathid number for selected creature. Creature must have no waypoint data.', @GMLEVEL_MODERATOR),
('wp reload', 'Syntax: .wp reload $pathid', 'Load path changes ingame - IMPORTANT: must be applied first for new paths before .wp load $pathid', @GMLEVEL_MODERATOR),
('wp show', 'Syntax: .wp show $option', 'Options:\non $pathid (or selected creature with loaded path) - Show path\noff - Hide path\ninfo $slected_waypoint - Show info for selected waypoint.', @GMLEVEL_MODERATOR),
('wp unload', 'Syntax: .wp unload', 'Unload path for selected creature.', @GMLEVEL_MODERATOR),
('wpgps', 'Syntax: .wpgps', 'Output current position to sql developer log as partial SQL query to be used in pathing', @GMLEVEL_ADMIN);


-- FREEDOM CUSTOM COMMANDS
REPLACE INTO freedom.commands (command, syntax, description, gmlevel) VALUES
('freedom', 'Syntax: .freedom $subcommand', 'Type .freedom to see the list of possible subcommands.', @GMLEVEL_PLAYER),
('freedom cast', 'Syntax: .freedom cast $spellId', 'Cast $spellId spell from Freedom\'s whitelisted spell table.', @GMLEVEL_PLAYER),
('freedom summon', 'Syntax: .freedom summon $playerName', 'Send a summon request to $playerName player to teleport him/her to you if the request is accepted.', @GMLEVEL_PLAYER),
('freedom demorph', 'Syntax: .freedom demorph', 'Demorph yourself.', @GMLEVEL_PLAYER),
('freedom fly', 'Syntax: .freedom fly on/off/$speedValue', 'Toggle your fly on/off or set your fly speed to $speedValue.', @GMLEVEL_PLAYER),
('freedom revive', 'Syntax: .freedom revive', 'Revive yourself if you are dead.', @GMLEVEL_PLAYER),
('freedom unaura', 'Syntax: .freedom unaura', 'Remove all auras/spell-effects from yourself.', @GMLEVEL_PLAYER),
('freedom speed', 'Syntax: .freedom speed $speedValue', 'Set movement speed value of all movement types to $speedValue.', @GMLEVEL_PLAYER),
('freedom walk', 'Syntax: .freedom walk $speedValue', 'Set movement speed value of walking to $speedValue.', @GMLEVEL_PLAYER),
('freedom run', 'Syntax: .freedom run $speedValue', 'Set movement speed value of running to $speedValue.', @GMLEVEL_PLAYER),
('freedom swim', 'Syntax: .freedom swim $speedValue', 'Set movement speed value of swimming to $speedValue.', @GMLEVEL_PLAYER),
('freedom scale', 'Syntax: .freedom scale $scaleValue', 'Set your character\'s size to $scaleValue.', @GMLEVEL_PLAYER),
('freedom drunk', 'Syntax: .freedom drunk $drunkPercentage', 'Set your character\'s drunkenness to $drunkPercentage.', @GMLEVEL_PLAYER),
('freedom waterwalk', 'Syntax: .freedom waterwalk on/off', 'Toggle your character\'s waterwalking on/off.', @GMLEVEL_PLAYER),
('freedom fix', 'Syntax: .freedom fix', 'Fix your character\'s item durability.', @GMLEVEL_PLAYER),
('freedom mailbox', 'Syntax: .freedom mailbox', 'Open mailbox UI.', @GMLEVEL_PLAYER),
('freedom money', 'Syntax: .freedom money', 'Reset your gold to high amounts.', @GMLEVEL_PLAYER),
('freedom bank', 'Syntax: .freedom bank', 'Open bank UI.', @GMLEVEL_PLAYER),
('freedom customize', 'Syntax: .freedom customize', 'Flag your character for re-customization.', @GMLEVEL_PLAYER),
('freedom racechange', 'Syntax: .freedom racechange', 'Flag your character for race change.', @GMLEVEL_PLAYER),
('freedom factionchange', 'Syntax: .freedom factionchange', 'Flag your character for faction change.', @GMLEVEL_PLAYER),
('freedom teleport', 'Syntax: .freedom teleport $namePart', 'Teleport to first public teleport starting with $namePart string in its name.', @GMLEVEL_PLAYER),
('freedom teleport add', 'Syntax: .freedom teleport add $name', 'Add public teleport with name $name right where you are currently standing.', @GMLEVEL_GM),
('freedom teleport delete', 'Syntax: .freedom teleport delete $name', 'Delete public teleport with name $name.', @GMLEVEL_GM),
('freedom teleport list', 'Syntax: .freedom teleport list $namePart', 'List public teleports by searching via their names or parts of their names ($namePart).', @GMLEVEL_PLAYER),
('freedom pteleport', 'Syntax: .freedom pteleport $namePart', 'Teleport to first private teleport starting with $namePart string in its name. Private teleports are unique to each account.', @GMLEVEL_PLAYER),
('freedom pteleport add', 'Syntax: .freedom pteleport add $name', 'Add private teleport with name $name right where you are currently standing. Private teleports are unique to each account.', @GMLEVEL_PLAYER),
('freedom pteleport delete', 'Syntax: .freedom pteleport delete $name', 'Delete private teleport with name $name. Private teleports are unique to each account.', @GMLEVEL_PLAYER),
('freedom pteleport list', 'Syntax: .freedom pteleport list $namePart', 'List private teleports by searching via their names or parts of their names ($namePart). Private teleports are unique to each account.', @GMLEVEL_PLAYER),
('freedom cast', 'Syntax: .freedom spell/cast $name/$spellId', 'Cast public spell with name $name or spell id $spellId.', @GMLEVEL_PLAYER),
('freedom spell', 'Syntax: .freedom spell/cast $spellId/$spellLink', 'Cast public spell of specified entry id (or shift-click on spell link, which is in public spell list).', @GMLEVEL_PLAYER),
('freedom spell add', 'Syntax: .freedom spell add $spellId/$spellLink [true/false]', 'Add spell to public list by its entry id. Second parameter (true/false, by default: false):\ntrue: allow spell to target others,\nfalse: spell only targets caster', @GMLEVEL_PLAYER),
('freedom spell delete', 'Syntax: .freedom spell delete $spellId/$spellLink', 'Delete public spell by their spell entry id ($spellId/$spellLink).', @GMLEVEL_PLAYER),
('freedom spell list', 'Syntax: .freedom spell list $namePart', 'List public spells by searching via their names or parts of their names ($namePart).', @GMLEVEL_PLAYER),
('freedom morph', 'Syntax: .freedom morph $name/$displayId', 'Change the model display of yourself into one of your available morphs of name $name or display id $displayId.', @GMLEVEL_PLAYER),
('freedom morph add', 'Syntax: .freedom morph add $name $displayId [$playerName]', 'Add morph with name as $name of display $displayId to player $playerName or selected player if $playerName is not supplied.', @GMLEVEL_PLAYER),
('freedom morph delete', 'Syntax: .freedom morph delete $name/$displayId [$playerName]', 'Delete morph with name/display of $name/$displayId from player $playername or selected player if $playerName is not supplied.', @GMLEVEL_PLAYER),
('freedom morph list', 'Syntax: .freedom morph list [$namePart]', 'List all your morphs, optionally filtering them via their custom names or parts of their custom names ($namePart).', @GMLEVEL_PLAYER),
('freedom hover', 'Syntax: .freedom hover on/off', 'Toggle your character\'s hover state on/off.', @GMLEVEL_PLAYER),
('freedom tame', 'Syntax: .freedom tame', 'Make a pet out of the targeted creature. Only works on tameable creatures.', @GMLEVEL_PLAYER),
('freedom panda horde', 'Syntax: .freedom panda horde', 'Change your race faction to horde pandaren. Can only be used by neutral pandaren. Must relog after executing the command for full changes to take effect.', @GMLEVEL_PLAYER),
('freedom panda alliance', 'Syntax: .freedom panda alliance', 'Change your race faction to alliance pandaren. Can only be used by neutral pandaren. Must relog after executing the command for full changes to take effect.', @GMLEVEL_PLAYER),
('freedom title list', 'Syntax: .freedom title list [$titleNamePart]', 'List all available titles (or if $titleNamePart is provided, list only those what contain $titleNamePart).', @GMLEVEL_PLAYER),
('freedom title set', 'Syntax: .freedom title set $titleId', 'Set your title via $titleId, including custom titles.', @GMLEVEL_PLAYER),

('freedom reload', 'Syntax: .freedom reload $subcommand', 'Type .freedom reload to see the list of possible subcommands.', @GMLEVEL_GM),
('freedom reload creature', 'Syntax: .freedom reload creature $subcommand', 'Type .freedom reload creature to see the list of possible subcommands.', @GMLEVEL_GM),
('freedom reload creature extra', 'Syntax: .freedom reload creature extra', 'Refresh FreedomDatabase creature_template_extra and creature_extra tables', @GMLEVEL_GM),
('freedom reload creature addon', 'Syntax: .freedom reload creature addon', 'Refresh WorldDatabase creature_template_addon and creature_addon tables', @GMLEVEL_GM),
('freedom reload creature base', 'Syntax: .freedom reload creature base', 'Refresh WorldDatabase creature_model_info, creature_template, creature_equip_template and creature tables', @GMLEVEL_GM),
('freedom reload gameobject', 'Syntax: .freedom reload gameobject $subcommand', 'Type .freedom reload gameobject to see the list of possible subcommands.', @GMLEVEL_GM),
('freedom reload gameobject extra', 'Syntax: .freedom reload gameobject extra', 'Refresh FreedomDatabase gameobject_template_extra and gameobject_extra tables', @GMLEVEL_GM),
('freedom reload gameobject base', 'Syntax: .freedom reload gameobject base', 'Refresh WorldDatabase gameobject_template and gameobject tables', @GMLEVEL_GM),
('freedom reload freedomtables', 'Syntax: .freedom reload freedomtables', 'Refreshes all values from Freedom DB tables in-game.', @GMLEVEL_GM),
('freedom reload public_tele', 'Syntax: .freedom reload public_tele', 'Refreshes in-game public teleports with values from public_tele table in the DB.', @GMLEVEL_GM),
('freedom reload private_tele', 'Syntax: .freedom reload private_tele', 'Refreshes in-game private teleports with values from private_tele table in the DB.', @GMLEVEL_GM),
('freedom reload public_spell', 'Syntax: .freedom reload public_spell', 'Refreshes in-game public spell list with values from public_spell table in the DB.', @GMLEVEL_GM),
('freedom reload morphs', 'Syntax: .freedom reload morphs', 'Refreshes in-game morph list with values from morphs table in the DB.', @GMLEVEL_GM),

('goto', 'Syntax: .goto $local_x [$local_y [$local_z [$local_deg]]]', 'Teleport to coordinates relative of your character.\n$local_x is forward(+)/backward(+)\n$local_y is left(+)/right(-)\n$local_z is up(+)/down(-)\n$local_deg is turn left(+)/turn right(-)', @GMLEVEL_MODERATOR),
('goto local', 'Syntax: .goto local $local_x [$local_y [$local_z [$local_deg]]]', 'Teleport to coordinates relative of your character.\n$local_x is forward(+)/backward(+)\n$local_y is left(+)/right(-)\n$local_z is up(+)/down(-)\n$local_deg is turn left(+)/turn right(-)', @GMLEVEL_MODERATOR),
('goto relative', 'Syntax: .goto relative $local_x [$local_y [$local_z [$local_deg]]]', 'Teleport to coordinates relative of your character.\n$local_x is forward(+)/backward(+)\n$local_y is left(+)/right(-)\n$local_z is up(+)/down(-)\n$local_deg is turn left(+)/turn right(-)', @GMLEVEL_MODERATOR),
('goto creature', 'Syntax: .goto creature [$guid]', 'Teleport your character to selected creature (either by targeting or .npc select) or creature with $guid if specified.', @GMLEVEL_MODERATOR),
('goto npc', 'Syntax: .goto npc [$guid]', 'Teleport your character to selected creature (either by targeting or .npc select) or creature with $guid if specified.', @GMLEVEL_MODERATOR),
('goto graveyard', 'Syntax: .goto graveyard $graveyardId', 'Teleport to graveyard with the graveyardId specified.', @GMLEVEL_MODERATOR),
('goto grid', 'Syntax: .goto grid $gridX $gridY [$mapId]', 'Teleport the gm to center of grid with provided indexes at map $mapId (or current map if it not provided).', @GMLEVEL_MODERATOR),
('goto local', 'Syntax: .goto local $local_x [$local_y [$local_z [$local_deg]]]', 'Teleport to coordinates relative of your character.\n$local_x is forward(+)/backward(+)\n$local_y is left(+)/right(-)\n$local_z is up(+)/down(-)\n$local_deg is turn left(+)/turn right(-)', @GMLEVEL_MODERATOR),
('goto object', 'Syntax: .goto object [$guid]', 'Teleport your character to selected gameobject (via .gobject select) or gameobject with $guid if specified', @GMLEVEL_MODERATOR),
('goto gobject', 'Syntax: .goto gobject [$guid]', 'Teleport your character to selected gameobject (via .gobject select) or gameobject with $guid if specified', @GMLEVEL_MODERATOR),
('goto relative', 'Syntax: .goto relative $local_x [$local_y [$local_z [$local_deg]]]', 'Teleport to coordinates relative of your character.\n$local_x is forward(+)/backward(+)\n$local_y is left(+)/right(-)\n$local_z is up(+)/down(-)\n$local_deg is turn left(+)/turn right(-)', @GMLEVEL_MODERATOR),
('goto taxinode', 'Syntax: .goto taxinode $taxinode', 'Teleport player to taxinode coordinates. You can look up zone using .lookup taxinode $namepart', @GMLEVEL_MODERATOR),
('goto trigger', 'Syntax: .goto trigger $trigger_id', 'Teleport your character to areatrigger with id $trigger_id. Character will be teleported to trigger target if selected areatrigger is telporting trigger.', @GMLEVEL_MODERATOR),
('goto xyz', 'Syntax: .goto xyz $x $y [$z [$mapid [$orientation]]]', 'Teleport player to point with ($x,$y,$z) coordinates at map $mapid with orientation $orientation. If z is not provided, ground/water level will be used. If mapid is not provided, the current map will be used. If $orientation is not provided, the current orientation will be used.', @GMLEVEL_MODERATOR),
('goto zonexy', 'Syntax: .goto zonexy $x $y [$zone]', 'Teleport player to point with ($x,$y) client coordinates at ground(water) level in zone $zoneid or current zone if $zoneid not provided. You can look up zone using .lookup area $namepart', @GMLEVEL_MODERATOR),

('blacklist', 'Syntax: .blacklist $subcommand', 'Type .blacklist to see the list of possible subcommands.', @GMLEVEL_GM),
('blacklist item', 'Syntax: .blacklist item $itemId/$itemLink [$flag] ($flag = 1 by default)', 'Add($flag = 1)/remove($flag = 0) item with id $itemId to blacklist, disallowing anyone but GMs and higher to add it.', @GMLEVEL_GM),
('blacklist gobject', 'Syntax: .blacklist gobject $entryId/$gobjectLink [$flag] ($flag = 1 by default)', 'Disable($flag = 1)/enable($flag = 0) gameobject with id $entryId from spawning and lookup lists.', @GMLEVEL_GM),

('gobject', 'Syntax: .gobject $subcommand', 'Type .gobject to see the list of possible subcommands or .help gobject $subcommand to see info on subcommands', @GMLEVEL_MODERATOR),
('gobject activate', 'Syntax: .gobject activate $guid', 'Activates an object like a door or a button.', @GMLEVEL_MODERATOR),
('gobject add', 'Syntax: .gobject add $id [$spawntimeSecs]', 'Add a game object from game object templates to the world at your current location using the $id.\nspawntimesecs sets the spawntime, it is optional.\n\nNote: this is a copy of .gameobject.', @GMLEVEL_MODERATOR),
('gobject add temp', 'Syntax: .gobject add temp $id [$spawntimeSecs]', 'Adds a temporary gameobject that is not saved to DB.', @GMLEVEL_MODERATOR),
('gobject delete', 'Syntax: .gobject delete [$go_guid]', 'Delete gameobject with guid $go_guid. If $go_guid is not provided, then it uses your last selected game object GUID.', @GMLEVEL_MODERATOR),
('gobject info', 'Syntax: .gobject info [modifiers] [$guid]', 'Query Gameobject information for selected gameobject or given $guid gameobject. Without modifiers, it queries basic info. Modifiers:\n-full : Display all information, which is displayed by other modifiers\n-pos : Display additional coordinate information\n-history : Display additional creation/modification history\n-advanced : Display additional advanced technical information', @GMLEVEL_GM),
('gobject move', 'Syntax: .gobject move [modifiers] [$x [$y [$z]]]', 'Move gameobject to character coordinates or to local coordinates relative to gameobject ($x = forward/backward, $y = left/right, $z) coordinates if they are provided ([$x [$y [$z]]]). Modifiers:\n-guid $guid : Target gameobject with $guid instead of selection\n-po : Use player orientation instead of gameobject\'s one\n-adeg $deg : Before moving add degrees $deg to its currently selected gameobject\'s or player\'s (depending on -po modifier) orientation\n-sdeg $deg : Before moving set orientation to specific degrees (overrides -po modifier).', @GMLEVEL_MODERATOR),
('gobject near', 'Syntax: .gobject near  [$distance]', 'Output gameobjects at distance $distance from player. Output gameobject guids and coordinates sorted by distance from character. If $distance not provided use 10 as default value.', @GMLEVEL_MODERATOR),
('gobject scale', 'Syntax: .gobject scale $scale [$guid]', 'Set gameobject scale to $scale.', @GMLEVEL_MODERATOR),
('gobject select', 'Syntax: .gobject select [$entryId]', 'Add nearby game object GUID to your selection. You can further filter nearest-selection process by supplying optional game object $entryId parameter (so the search is restricted to that specific $entryId).', @GMLEVEL_MODERATOR),
('gobject phase', 'Syntax: .gobject phase [modifiers] $phaseList', 'Change gameobject phase to phases $phaseList (valid $phaseList phasemask items are: 1 2 4 8 16 32 64 128 256, where 1 is default phase) with related world vision update for players. Phase state is persistant and saved to DB. Invalid $phaseList items are ignored. Modifiers:\n-guid $guid : Target gameobject with $guid instead of selection\n-ids : Treat $phaseList items as Phase IDs instead of phase mask entries', @GMLEVEL_MODERATOR),
('gobject set state', 'Syntax: .gobject set state $type $state [$guid]', 'Set gameobject type and state. Usually $state = 1 is door closed/default animation, while $state = 0 is door opened/active animation, but you can also simply use .gobject activate command instead.', @GMLEVEL_MODERATOR),
('gobject spawn', 'Syntax: .gobject spawn $entryId [$spawntimeSecs]', 'Add a game object from game object templates to the world at your current location using the $entryId.\nspawntimesecs sets the spawntime, it is optional.', @GMLEVEL_MODERATOR),
('gobject spawn temp', 'Syntax: .gobject spawn temp $entryId [$spawntimeSecs]', 'Adds a temporary gameobject that is not saved to DB.', @GMLEVEL_MODERATOR),
('gobject turn', 'Syntax: .gobject turn [modifiers]', 'Set for selected gameobject orientation same as current character orientation. Modifiers:\n-guid $guid : Target gameobject with $guid instead of selection\n-adeg $deg : Turn gameobject by adding degrees $deg to its current orientation\n-sdeg $deg : Turn gameobject by setting its global orientation in degrees $deg', @GMLEVEL_MODERATOR),
('gobject axial', 'Syntax: .gobject axial [modifiers] $roll $pitch $yaw [$guid]', 'Set axial rotation (euler\'s angles) for roll (X), pitch (Y) and yaw (Z) axis of the object. Angle parameters are to be specified in degree form. Modifiers:\n-adeg : Instead of setting axis angles to specified degrees, add them to the existing ones.', @GMLEVEL_MODERATOR),
('gobject roll', 'Syntax: .gobject roll [modifiers] $roll [$guid]', 'Set axial rotation (euler\'s angles) for roll (X) axis of the object, preserving the previous values of the other axis angles. Angle parameters are to be specified in degree form. Modifiers:\n-adeg : Instead of setting axis angle to specified degrees, add it to the existing one.', @GMLEVEL_MODERATOR),
('gobject pitch', 'Syntax: .gobject pitch [modifiers] $pitch [$guid]', 'Set axial rotation (euler\'s angles) for pitch (Y) axis of the object, preserving the previous values of the other axis angles. Angle parameters are to be specified in degree form. Modifiers:\n-adeg : Instead of setting axis angle to specified degrees, add it to the existing one.', @GMLEVEL_MODERATOR),
('gobject yaw', 'Syntax: .gobject yaw [modifiers] $yaw [$guid]', 'Set axial rotation (euler\'s angles) for yaw (Z) axis of the object, preserving the previous values of the other axis angles. Angle parameters are to be specified in degree form. Modifiers:\n-adeg : Instead of setting axis angle to specified degrees, add it to the existing one.', @GMLEVEL_MODERATOR),

('modify phase', 'Syntax: .modify phase [modifiers] $phaseList', 'Change target creature/player (or self if nothing targeted) phase to phases $phaseList (valid $phaseList phasemask items are: 1 2 4 8 16 32 64 128 256, where 1 is default phase) with related world vision update for players. Modify phase state is not persistant, therefore, not saved to DB. Invalid $phaseList items are ignored. Modifiers:\n-guid $guid : Target a creature with $guid instead of selection\n-ids : Treat $phaseList items as Phase IDs instead of phase mask entries', @GMLEVEL_MODERATOR),

('npc', 'Syntax: .npc $subcommand', 'Type .npc to see the list of possible subcommands or .help npc $subcommand to see info on subcommands', @GMLEVEL_MODERATOR),
('npc add', 'Syntax: .npc add $entryId', 'Spawn a creature by the given template id of $entryId.', @GMLEVEL_MODERATOR),
('npc spawn', 'Syntax: .npc spawn $entryId', 'Spawn a creature by the given template id of $entryId.', @GMLEVEL_MODERATOR),
('npc add item', 'Syntax: .npc add item $itemId [$maxCount [$incrTime [$extendedCost]]]', 'Add item $itemid to item list of selected vendor. Also optionally set max count item in vendor item list and time to item count restoring and items ExtendedCost.', @GMLEVEL_GM),
('npc add formation', 'Syntax: .npc add formation [$leaderGuid]', 'Add targeted creature to follow-formation of leader identified by $leaderGuid (or .npc select selected creature).', @GMLEVEL_GM),
('npc delete', 'Syntax: .npc delete [$guid]', 'Delete creature with guid $guid (or the selected if no guid is provided)', @GMLEVEL_MODERATOR),
('npc delete item', 'Syntax: .npc delete item $itemId', 'Remove item $itemId from item list of selected vendor.', @GMLEVEL_GM),
('npc follow', 'Syntax: .npc follow start', 'Selected creature start follow you until death/fight/etc.', @GMLEVEL_MODERATOR),
('npc follow stop', 'Syntax: .npc follow stop', 'Selected creature (non pet) stop follow you.', @GMLEVEL_MODERATOR),
('npc info', 'Syntax: .npc info [modifiers] [$guid]', 'Query Creature information for selected creature or given $guid creature. Without modifiers, it queries basic info. Modifiers:\n-full : Display all information, which is displayed by other modifiers\n-pos : Display additional coordinate information\n-history : Display additional creation/modification history\n-advanced : Display additional advanced technical information', @GMLEVEL_MODERATOR),
('npc move', 'Syntax: .npc move [modifiers] [$x [$y [$z]]]', 'Move creature to character coordinates or to local coordinates relative to creature ($x = forward/backward, $y = left/right, $z) coordinates if they are provided ([$x [$y [$z]]]). Modifiers:\n-guid $guid : Target creature with $guid instead of selection\n-po : Use player orientation instead of creature\'s one\n-adeg $deg : Before moving add degrees $deg to its currently selected creature\'s or player\'s (depending on -po modifier) orientation\n-sdeg $deg : Before moving set orientation to specific degrees (overrides -po modifier).', @GMLEVEL_MODERATOR),
('npc turn', 'Syntax: .gobject turn [modifiers]', 'Set for selected creature orientation same as current character orientation. Modifiers:\n-guid $guid : Target creature with $guid instead of selection\n-adeg $deg : Turn creature by adding degrees $deg to its current orientation\n-sdeg $deg : Turn creature by explicitly setting its global orientation in degrees $deg', @GMLEVEL_MODERATOR),
('npc playemote', 'Syntax: .npc playemote $emoteId [$guid]', 'Make the selected creature (or $guid creature) emote with an emote of id $emoteId.', @GMLEVEL_MODERATOR),
('npc say', 'Syntax: .npc say $message', 'Make selected creature say specified message.', @GMLEVEL_MODERATOR),
('npc set data', 'Syntax: .npc set data $field $data [$guid]', 'Sets data for the selected creature. Used for testing Scripting', @GMLEVEL_ADMIN),
('npc set entry', 'Syntax: .npc set entry $newEntryId [$guid]', 'Switch selected creature (or creature by $guid if provided) with another entry $newEntryId from creature_template. This change is not saved to DB.', @GMLEVEL_GM),
('npc set factionid', 'Syntax: .npc set factionid $factionid', 'Set the faction of the selected creature to $factionid.', @GMLEVEL_MODERATOR),
('npc set flag', 'Syntax: .npc set flag $npcFlags [$guid] ($flags is uint64 bitmask)', 'Set the NPC flags of creature template of the selected creature and selected creature to $npcFlags. NPC flags will applied to all creatures of selected creature template after server restart or grid unload/load.', @GMLEVEL_ADMIN),
('npc set level', 'Syntax: .npc set level $newLevel [$guid]', 'Change the level of the selected creature (or creature of $guid if it is provided) to $newLevel.\n\n$newLevel may range from 1 to (CONFIG_MAX_PLAYER_LEVEL) + 3.', @GMLEVEL_MODERATOR),
('npc set model', 'Syntax: .npc set model $displayid', 'Change the model id of the selected creature to $displayid.', @GMLEVEL_MODERATOR),
('npc set phase', 'Syntax: .npc set phase [modifiers] $phasemask', 'Change creature phase to phases $phaseList (valid $phaseList phasemask items are: 1 2 4 8 16 32 64 128 256, where 1 is default phase) with related world vision update for players. Phase state is persistant and saved to DB. Invalid $phaseList items are ignored. Modifiers:\n-guid $guid : Target creature with $guid instead of selection\n-ids : Treat $phaseList items as Phase IDs instead of phase mask entries', @GMLEVEL_MODERATOR),
('npc set scale', 'Syntax: .npc set scale $scale [$guid]', 'Set size scaling of selected creature to $scale. Target creature by $guid if it is provided.', @GMLEVEL_MODERATOR),
('npc set spawndist', 'Syntax: .npc set spawndist $dist', 'Adjust spawndistance of selected creature to dist.', @GMLEVEL_ADMIN),
('npc set spawntime', 'Syntax: .npc set spawntime $time ', 'Adjust spawntime of selected creature to time.', @GMLEVEL_ADMIN),
('npc textemote', 'Syntax: .npc textemote $message', 'Make the selected creature to do textemote of $message.', @GMLEVEL_MODERATOR),
('npc whisper', 'Syntax: .npc whisper $playerName $message', 'Make the selected npc whisper $message to  $playerName player.', @GMLEVEL_MODERATOR),
('npc yell', 'Syntax: .npc yell $message', 'Make selected creature yell specified message.', @GMLEVEL_MODERATOR),
('npc set emote', 'Syntax: .npc set emote $emoteId [$guid]', 'Set database persistent play-emote of $emoteId for the creature.', @GMLEVEL_MODERATOR),
('npc set mount', 'Syntax: .npc set mount $mountId [$guid]', 'Set database persistent mount of $mountId for the creature.', @GMLEVEL_MODERATOR),
('npc set aura', 'Syntax: .npc set aura $auraId on/off [$guid]', 'Toggle database persistent aura of $auraId (can also be a spell id) for the creature.', @GMLEVEL_MODERATOR),

('npc set deathstate',     'Syntax: .npc set deathstate on/off [$guid]',     'Toggle database persistent death animation for the creature. Cancels other set animation states.', @GMLEVEL_MODERATOR),
('npc set sleepstate',     'Syntax: .npc set sleepstate on/off [$guid]',     'Toggle database persistent sleep animation for the creature. Cancels other set animation states.', @GMLEVEL_MODERATOR),
('npc set hoverstate',     'Syntax: .npc set hoverstate on/off [$guid]',     'Toggle database persistent hover animation for the creature. Cancels other set animation states.', @GMLEVEL_MODERATOR),
('npc set sitgroundstate', 'Syntax: .npc set sitgroundstate on/off [$guid]', 'Toggle database persistent sit-on-ground (normal sit) animation for the creature. Cancels other set animation states.', @GMLEVEL_MODERATOR),
('npc set sitlowstate',    'Syntax: .npc set sitlowstate on/off [$guid]',    'Toggle database persistent sit-on-low-height (like sitting on low chair) animation for the creature. Cancels other set animation states.', @GMLEVEL_MODERATOR),
('npc set sitmediumstate', 'Syntax: .npc set sitmediumstate on/off [$guid]', 'Toggle database persistent sit-on-medium-height (like sitting on medium chair) animation for the creature. Cancels other set animation states.', @GMLEVEL_MODERATOR),
('npc set sithighstate',   'Syntax: .npc set sithighstate on/off [$guid]',   'Toggle database persistent sit-on-high-height (like sitting on high chair, where legs do not even touch the ground) animation for the creature. Cancels other set animation states.', @GMLEVEL_MODERATOR),
('npc set kneelstate',     'Syntax: .npc set kneelstate on/off [$guid]',     'Toggle database persistent kneel animation for the creature. Cancels other set animation states.', @GMLEVEL_MODERATOR),
('npc set sheathstate',    'Syntax: .npc set sheathstate 0/1/2 [$guid]',     'Toggle database persistent sheath state for the creature:\n0 - sheath all weapons,\n1 - prepare melee weapons,\n2 - prepare ranged weapons', @GMLEVEL_MODERATOR),
('npc set flystate',       'Syntax: .npc set flystate on/off [$guid]',       'Toggle database persistent flying/swimming-in-air animation for the creature. Combine with .npc set gravity on/off to setup flying NPCs.', @GMLEVEL_MODERATOR),

('npc set gravity',        'Syntax: .npc set gravity on/off [$guid]',        'Toggle database persistent gravity state for the creature. Useful to stop creatures falling through spawned gameobjects if turned off.', @GMLEVEL_MODERATOR),
('npc set swim',           'Syntax: .npc set swim on/off [$guid]',           'Toggle database persistent swim ability for the creature (mainly sets whether creature will swim on top of water if fallen into it or keep falling to the bottom below water-line).', @GMLEVEL_MODERATOR),

('npc set bytes1',  'Syntax: .npc set bytes1 $bytes1 [$guid]', 'Set value for unit field UNIT_FIELD_BYTES_1. Do not use unless you know what this is.', @GMLEVEL_MODERATOR),
('npc set bytes2',  'Syntax: .npc set bytes2 $bytes2 [$guid]', 'Set value for unit field UNIT_FIELD_BYTES_2. Do not use unless you know what this is.', @GMLEVEL_MODERATOR),

('lookup item', 'Syntax: .lookup item [modifiers] $itemNamePart', 'Looks up an item by $itemNamePart, and returns all matches with their Item IDs (does not include unrefined custom items unless \'-c\' modifier is specified). Command has following modifiers:\n-c : Search through unrefined custom items instead of default ones\n-a : Search only armor items (item class == 4)\n-w : Search only weapon items (item class == 2)', @GMLEVEL_PLAYER),

('cometome', 'Syntax: .cometome [$speed]', 'Make selected creature walk/run to your current location (new position not saved to DB, however moving/turning commands will take the new position into account). You can specify optional $speed parameter to set custom movement speed, otherwise creature\'s speed is used.', @GMLEVEL_MODERATOR),
('jumptome', 'Syntax: .jumptome [$speedXY [$speedZ]]', 'Make selected creature jump to your current location (new position not saved to DB, however moving/turning commands will take the new position into account). You can specify optional $speedXY parameter to set custom jump velocity and an optional $speedZ to set height of the parabolic curve between jump points ($speedZ is 0 by default, which means that the jump will be straight, while greater $speedZ values make higher and higher curve).', @GMLEVEL_MODERATOR)
;

SELECT * FROM freedom.commands ORDER BY command;

